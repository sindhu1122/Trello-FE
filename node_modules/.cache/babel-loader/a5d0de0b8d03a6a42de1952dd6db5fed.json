{"ast":null,"code":"var _jsxFileName = \"/home/mohitha/Desktop/assignment2/src/component/Board/Board.js\";\nimport React, { Component } from 'react';\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasklist: '',\n      stage: ''\n    };\n\n    this.addStage = () => {\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      console.log(TaskData.boards[this.props.task]);\n      TaskData.boards[this.props.task].push({\n        [this.state.stage]: []\n      });\n      localStorage.setItem(this.props.username, JSON.stringify(TaskData));\n      this.setState({\n        stage: ''\n      });\n    };\n\n    this.dropHadler = () => {};\n  }\n\n  HandleChange(event) {\n    this.setState({\n      tasklist: event.target.value\n    });\n  }\n\n  HandleStage(event) {\n    this.setState({\n      stage: event.target.value\n    });\n  } //  addTask=()=>\n  //     {\n  //         let task1=this.props.task\n  //          let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n  //         console.log(this.props.task)\n  //         console.log( TaskData.boards[task1][0].Todo)\n  //         TaskData.boards[task1][0].Todo.push(this.state.tasklist)\n  //         TaskData.boards[task1][1].Done.push(this.state.tasklist)\n  //         console.log(TaskData)\n  //          localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n  //         // console.log(this.props.task)\n  //         // console.log(TaskData.boards[task1][0].todo)\n  //         this.setState({tasklist:''})\n  //     }\n\n\n  render() {\n    let data = JSON.parse(localStorage.getItem(this.props.username));\n    let optios = [];\n    let stages = data.boards[this.props.task].map(item => {\n      optios.push(Object.keys(item));\n      return /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, Object.keys(item));\n    });\n    console.log();\n    let op = optios.map(item => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }\n      }, item);\n    }); //    let tasks=data.boards[this.props.task][0].Todo.map(item=>{\n    //        console.log(item)\n    //         return <tr>\n    //         <td >{item}</td></tr>\n    //     })\n    //     console.log(tasks)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control form-control-lg\",\n      id: \"ip2\",\n      type: \"text\",\n      placeholder: \"Add stage\",\n      value: this.state.stage,\n      onChange: event => this.HandleStage(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addStage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }\n    }, \"Add Stage\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.dropHadler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control form-control-lg\",\n      id: \"ip1\",\n      type: \"text\",\n      placeholder: \"Enter task \",\n      onChange: event => this.HandleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 138\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 1\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table table-striped table-responsive-md btn-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, stages)));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/mohitha/Desktop/assignment2/src/component/Board/Board.js"],"names":["React","Component","Board","state","tasklist","stage","addStage","TaskData","JSON","parse","localStorage","getItem","props","username","console","log","boards","task","push","setItem","stringify","setState","dropHadler","HandleChange","event","target","value","HandleStage","render","data","optios","stages","map","item","Object","keys","op","addTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nclass Board extends Component{\n    \n    state={\n        tasklist:'',\n        stage:''\n    }\n    HandleChange(event)\n      {\n          this.setState({tasklist:event.target.value})\n      }\n      HandleStage(event)\n      {\n          this.setState({stage:event.target.value})\n      }\n    //  addTask=()=>\n    //     {\n    //         let task1=this.props.task\n    //          let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n    //         console.log(this.props.task)\n    //         console.log( TaskData.boards[task1][0].Todo)\n            \n    //         TaskData.boards[task1][0].Todo.push(this.state.tasklist)\n    //         TaskData.boards[task1][1].Done.push(this.state.tasklist)\n    //         console.log(TaskData)\n    //          localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n    //         // console.log(this.props.task)\n    //         // console.log(TaskData.boards[task1][0].todo)\n    //         this.setState({tasklist:''})\n    //     }\n        addStage=()=>\n        {\n            let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            console.log(TaskData.boards[this.props.task])\n            TaskData.boards[this.props.task].push({[this.state.stage]:[]})\n            localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n\n            this.setState({stage:''})\n        }\n        dropHadler=()=>{\n            \n        }\n    render(){\n       let data=JSON.parse(localStorage.getItem(this.props.username))\n       let optios=[]\n       let stages=data.boards[this.props.task].map(item=>{\n           optios.push(Object.keys(item))\n       return <th scope=\"col\">{Object.keys(item)}</th>\n       })\n       console.log()\n        let  op =optios.map(item=>{\n        return <option value={item}>{item}</option>\n    \n    })\n    //    let tasks=data.boards[this.props.task][0].Todo.map(item=>{\n    //        console.log(item)\n    \n    //         return <tr>\n    //         <td >{item}</td></tr>\n           \n          \n        \n    //     })\n    //     console.log(tasks)\n        return(\n            <div>\n<input class=\"form-control form-control-lg\" id=\"ip2\" type=\"text\" placeholder=\"Add stage\" value={this.state.stage} onChange={(event)=>this.HandleStage(event)}/>\n<button onClick={this.addStage}>Add Stage</button>\n<select onChange={this.dropHadler}>\n    {op}\n</select>\n<input class=\"form-control form-control-lg\" id=\"ip1\" type=\"text\" placeholder=\"Enter task \" onChange={(event)=>this.HandleChange(event)}/><br></br>\n<button onClick={this.addTask}>Add</button>\n                <table class=\"table table-striped table-responsive-md btn-table\">\n                    <thead>\n                        {stages}\n                    </thead>\n                 {/* <tbody>\n                        <tr>\n                            \n                                {tasks}\n                        </tr>\n                    </tbody>  */}\n                </table>\n                \n            </div>\n        )\n    }\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}