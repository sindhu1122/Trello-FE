{"ast":null,"code":"var _jsxFileName = \"/home/mohitha/Desktop/assignment2/src/component/Board/Board.js\";\nimport React, { Component } from 'react';\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasklist: '',\n      stage: '',\n      drop: '',\n      fromdrop: '',\n      todrop: '',\n      adddrop: ''\n    };\n\n    this.addTask = () => {\n      let task1 = this.props.task;\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      console.log(this.props.task);\n      console.log(TaskData.boards[task1][0].Todo);\n      let index = array.findIndex(ele => {\n        return ele == this.state.adddrop;\n      });\n      TaskData.boards[task1][i].Todo.push(this.state.tasklist);\n      TaskData.boards[task1][1].Done.push(this.state.tasklist);\n      console.log(TaskData);\n      localStorage.setItem(this.props.username, JSON.stringify(TaskData)); // console.log(this.props.task)\n      // console.log(TaskData.boards[task1][0].todo)\n\n      this.setState({\n        tasklist: ''\n      });\n    };\n\n    this.addStage = () => {\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      let array = TaskData.boards[this.props.task].map(obj => {\n        return Object.keys(obj);\n      });\n      let index = array.findIndex(ele => {\n        return ele == this.state.drop;\n      });\n      TaskData.boards[this.props.task].splice(index + 1, 0, {\n        [this.state.stage]: []\n      }); // console.log(TaskData.boards[this.props.task])\n      // let value=this.state.drop\n      // let arr= Object.keys( TaskData.boards[this.props.task])\n      // TaskData.boards[this.props.task].map(item=>{\n      //     console.log(value,item)\n      //     if(value===item)\n      //     {\n      //         let c=arr.indexOf(value)\n      //         TaskData.boards[this.props.task][c+1]={[this.state.stage]:[]}\n      //     }\n      // })\n      // console.log(TaskData)\n      //TaskData.boards[this.props.task].push({[this.state.stage]:[]})\n\n      localStorage.setItem(this.props.username, JSON.stringify(TaskData));\n      this.setState({\n        stage: ''\n      });\n    };\n\n    this.rearrage = () => {\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      let a1 = TaskData.boards[this.props.task].map(item => {\n        return Object.keys(item);\n      });\n      let i1 = a1.findIndex(ele => {\n        return ele == this.state.fromdrop;\n      });\n      console.log(i1);\n      let i2 = a1.findIndex(ele => {\n        return ele == this.state.todrop;\n      });\n      console.log(i2);\n      TaskData.boards[this.props.task].splice(i2 + 1, 0, TaskData.boards[this.props.task][i1]);\n      console.log(TaskData);\n      TaskData.boards[this.props.task].splice(i1, 1);\n      console.log(TaskData);\n      localStorage.setItem(this.props.username, JSON.stringify(TaskData));\n      this.forceUpdate();\n    };\n\n    this.deleteStage = () => {\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      let a1 = TaskData.boards[this.props.task].map(item => {\n        return Object.keys(item);\n      });\n      let i1 = a1.findIndex(ele => {\n        return ele == this.state.fromdrop;\n      });\n      let arr = Object.values(TaskData.boards[this.props.task][i1 + 1]);\n      let delarr = Object.values(TaskData.boards[this.props.task][i1]);\n      delarr.map(ele => {\n        arr[0].push(ele);\n      });\n      TaskData.boards[this.props.task].splice(i1, 1);\n      localStorage.setItem(this.props.username, JSON.stringify(TaskData));\n      this.forceUpdate();\n    };\n\n    this.dropHadler = e => {\n      this.setState({\n        drop: e.target.value\n      });\n    };\n\n    this.fromdrop = e => {\n      this.setState({\n        fromdrop: e.target.value\n      });\n    };\n\n    this.todrop = e => {\n      this.setState({\n        todrop: e.target.value\n      });\n    };\n\n    this.adddrop = e => {\n      this.setState({\n        adddrop: e.target.value\n      });\n    };\n  }\n\n  HandleChange(event) {\n    this.setState({\n      tasklist: event.target.value\n    });\n  }\n\n  HandleStage(event) {\n    this.setState({\n      stage: event.target.value\n    });\n  }\n\n  render() {\n    let data = JSON.parse(localStorage.getItem(this.props.username));\n    let value = this.state.drop;\n    let arr = data.boards[this.props.task];\n    let optios = [];\n    let stages = arr.map(item => {\n      optios.push(Object.keys(item));\n      return /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, Object.keys(item));\n    });\n    console.log();\n    let op = optios.map(item => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 16\n        }\n      }, item);\n    }); //    let tasks=data.boards[this.props.task][0].Todo.map(item=>{\n    //        console.log(item)\n    //         return <tr>\n    //         <td >{item}</td></tr>\n    //     })\n    //     console.log(tasks)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ip2\",\n      type: \"text\",\n      placeholder: \"Add stage\",\n      value: this.state.stage,\n      onChange: event => this.HandleStage(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.dropHadler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addStage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 1\n      }\n    }, \"Add Stage\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 1\n      }\n    }, \"Rearrage tasks\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.fromdrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.todrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.rearrage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 1\n      }\n    }, \"Rearrage\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 1\n      }\n    }, \"Delete stage\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.fromdrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deleteStage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 1\n      }\n    }, \"Delete Stage\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control form-control-lg\",\n      id: \"ip1\",\n      type: \"text\",\n      placeholder: \"Enter task \",\n      onChange: event => this.HandleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 138\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.adddrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 1\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table table-striped table-responsive-md btn-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, stages)));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/mohitha/Desktop/assignment2/src/component/Board/Board.js"],"names":["React","Component","Board","state","tasklist","stage","drop","fromdrop","todrop","adddrop","addTask","task1","props","task","TaskData","JSON","parse","localStorage","getItem","username","console","log","boards","Todo","index","array","findIndex","ele","i","push","Done","setItem","stringify","setState","addStage","map","obj","Object","keys","splice","rearrage","a1","item","i1","i2","forceUpdate","deleteStage","arr","values","delarr","dropHadler","e","target","value","HandleChange","event","HandleStage","render","data","optios","stages","op"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nclass Board extends Component{\n    \n    state={\n        tasklist:'',\n        stage:'',\n        drop:'',\n        fromdrop:'',\n        todrop:'',\n        adddrop:''\n    }\n    HandleChange(event)\n      {\n          this.setState({tasklist:event.target.value})\n      }\n      HandleStage(event)\n      {\n          this.setState({stage:event.target.value})\n      }\n     addTask=()=>\n        {\n            let task1=this.props.task\n             let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            console.log(this.props.task)\n            console.log( TaskData.boards[task1][0].Todo)\n            let index = array.findIndex((ele) => {\n                return ele == this.state.adddrop\n            })\n            TaskData.boards[task1][i].Todo.push(this.state.tasklist)\n            TaskData.boards[task1][1].Done.push(this.state.tasklist)\n            console.log(TaskData)\n             localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n            // console.log(this.props.task)\n            // console.log(TaskData.boards[task1][0].todo)\n            this.setState({tasklist:''})\n        }\n        addStage=()=>\n        {\n            let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            \n            let array = TaskData.boards[this.props.task].map(obj => {\n            return Object.keys(obj)\n        })\n        let index = array.findIndex((ele) => {\n            return ele == this.state.drop\n        })\n        TaskData.boards[this.props.task].splice(index + 1, 0,{[this.state.stage]:[]} )\n            // console.log(TaskData.boards[this.props.task])\n            // let value=this.state.drop\n            // let arr= Object.keys( TaskData.boards[this.props.task])\n            // TaskData.boards[this.props.task].map(item=>{\n            //     console.log(value,item)\n            //     if(value===item)\n            //     {\n            //         let c=arr.indexOf(value)\n            //         TaskData.boards[this.props.task][c+1]={[this.state.stage]:[]}\n            //     }\n            // })\n            // console.log(TaskData)\n            //TaskData.boards[this.props.task].push({[this.state.stage]:[]})\n            localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n\n            this.setState({stage:''})\n        }\n        rearrage=()=>{\n            let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            let a1=TaskData.boards[this.props.task].map(item=>{\n                return Object.keys(item)\n            })\n            let i1=a1.findIndex((ele)=>{\n             return ele == this.state.fromdrop\n            })\n            console.log(i1)\n            let i2=a1.findIndex((ele)=>{\n                return ele == this.state.todrop\n               })\n               console.log(i2)\n               TaskData.boards[this.props.task].splice(i2 + 1, 0, TaskData.boards[this.props.task][i1])\n               console.log(TaskData)\n               TaskData.boards[this.props.task].splice(i1,1)\n               console.log(TaskData)\n               localStorage.setItem(this.props.username,JSON.stringify(TaskData))\n               this.forceUpdate()\n        }\n        deleteStage=()=>{\n            let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            let a1=TaskData.boards[this.props.task].map(item=>{\n                return Object.keys(item)\n            })\n            let i1=a1.findIndex((ele)=>{\n                return ele == this.state.fromdrop\n               })\n            let arr=Object.values(TaskData.boards[this.props.task][i1+1])\n            let delarr=Object.values(TaskData.boards[this.props.task][i1])\n            delarr.map((ele)=>{\n                arr[0].push(ele)\n            })\n            TaskData.boards[this.props.task].splice(i1,1)\n            localStorage.setItem(this.props.username,JSON.stringify(TaskData))\n            this.forceUpdate()\n        }\n\n        dropHadler=(e)=>{\n            this.setState({drop:e.target.value})\n        }\n        fromdrop=(e)=>{\n            this.setState({fromdrop:e.target.value})\n        }\n        todrop=(e)=>{\n            this.setState({todrop:e.target.value})\n        }\n        adddrop=(e)=>{\n            this.setState({adddrop:e.target.value})\n        }\n    render(){\n       let data=JSON.parse(localStorage.getItem(this.props.username))\n       let value=this.state.drop\n       let arr=data.boards[this.props.task]\n       let optios=[]\n       let stages=arr.map(item=>{\n           optios.push(Object.keys(item))\n       return <th scope=\"col\">{Object.keys(item)}</th>\n       })\n       console.log()\n        let  op =optios.map(item=>{\n        return <option value={item}>{item}</option>\n    \n    })\n    //    let tasks=data.boards[this.props.task][0].Todo.map(item=>{\n    //        console.log(item)\n    \n    //         return <tr>\n    //         <td >{item}</td></tr>\n           \n          \n        \n    //     })\n    //     console.log(tasks)\n        return(\n            <div>\n<input  id=\"ip2\" type=\"text\" placeholder=\"Add stage\" value={this.state.stage} onChange={(event)=>this.HandleStage(event)}/>\n<select onChange={this.dropHadler}>\n    {op}\n</select>\n\n<button onClick={this.addStage}>Add Stage</button><br></br>\n<label>Rearrage tasks</label>\n<select onChange={this.fromdrop}>\n    {op}\n</select>\n<select onChange={this.todrop}>\n    {op}\n</select>\n<button onClick={this.rearrage}>Rearrage</button><br></br>\n<label>Delete stage</label>\n<select onChange={this.fromdrop}>\n    {op}\n</select>\n<button onClick={this.deleteStage}>Delete Stage</button><br></br>\n<input class=\"form-control form-control-lg\" id=\"ip1\" type=\"text\" placeholder=\"Enter task \" onChange={(event)=>this.HandleChange(event)}/><br></br>\n<select onChange={this.adddrop}>\n    {op}\n</select>\n<button onClick={this.addTask}>Add</button>\n                <table class=\"table table-striped table-responsive-md btn-table\">\n                    <thead>\n                        {stages}\n                    </thead>\n                 {/* <tbody>\n                        <tr>\n                            \n                                {tasks}\n                        </tr>\n                    </tbody>  */}\n                </table>\n                \n            </div>\n        )\n    }\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}