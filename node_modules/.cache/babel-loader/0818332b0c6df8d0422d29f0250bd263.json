{"ast":null,"code":"var _jsxFileName = \"/home/mohitha/Desktop/assignment2/src/component/Board/Board.js\";\nimport React, { Component } from 'react';\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasklist: '',\n      stage: '',\n      drop: '',\n      fromdrop: '',\n      todrop: ''\n    };\n\n    this.addStage = () => {\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      let array = TaskData.boards[this.props.task].map(obj => {\n        return Object.keys(obj);\n      });\n      let index = array.findIndex(ele => {\n        return ele == this.state.drop;\n      });\n      TaskData.boards[this.props.task].splice(index + 1, 0, {\n        [this.state.stage]: []\n      }); // console.log(TaskData.boards[this.props.task])\n      // let value=this.state.drop\n      // let arr= Object.keys( TaskData.boards[this.props.task])\n      // TaskData.boards[this.props.task].map(item=>{\n      //     console.log(value,item)\n      //     if(value===item)\n      //     {\n      //         let c=arr.indexOf(value)\n      //         TaskData.boards[this.props.task][c+1]={[this.state.stage]:[]}\n      //     }\n      // })\n      // console.log(TaskData)\n      //TaskData.boards[this.props.task].push({[this.state.stage]:[]})\n\n      localStorage.setItem(this.props.username, JSON.stringify(TaskData));\n      this.setState({\n        stage: ''\n      });\n    };\n\n    this.rearrage = () => {\n      let TaskData = JSON.parse(localStorage.getItem(this.props.username));\n      let a1 = TaskData.boards[this.props.task].map(item => {\n        return Object.ke;\n      });\n    };\n\n    this.dropHadler = e => {\n      this.setState({\n        drop: e.target.value\n      });\n    };\n\n    this.fromdrop = e => {\n      this.setState({\n        fromdrop: e.target.value\n      });\n    };\n\n    this.todrop = e => {\n      this.setState({\n        todrop: e.target.value\n      });\n    };\n  }\n\n  HandleChange(event) {\n    this.setState({\n      tasklist: event.target.value\n    });\n  }\n\n  HandleStage(event) {\n    this.setState({\n      stage: event.target.value\n    });\n  } //  addTask=()=>\n  //     {\n  //         let task1=this.props.task\n  //          let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n  //         console.log(this.props.task)\n  //         console.log( TaskData.boards[task1][0].Todo)\n  //         TaskData.boards[task1][0].Todo.push(this.state.tasklist)\n  //         TaskData.boards[task1][1].Done.push(this.state.tasklist)\n  //         console.log(TaskData)\n  //          localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n  //         // console.log(this.props.task)\n  //         // console.log(TaskData.boards[task1][0].todo)\n  //         this.setState({tasklist:''})\n  //     }\n\n\n  render() {\n    let data = JSON.parse(localStorage.getItem(this.props.username));\n    let value = this.state.drop;\n    let arr = data.boards[this.props.task];\n    let optios = [];\n    let stages = arr.map(item => {\n      optios.push(Object.keys(item));\n      return /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, Object.keys(item));\n    });\n    console.log();\n    let op = optios.map(item => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }\n      }, item);\n    }); //    let tasks=data.boards[this.props.task][0].Todo.map(item=>{\n    //        console.log(item)\n    //         return <tr>\n    //         <td >{item}</td></tr>\n    //     })\n    //     console.log(tasks)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ip2\",\n      type: \"text\",\n      placeholder: \"Add stage\",\n      value: this.state.stage,\n      onChange: event => this.HandleStage(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.dropHadler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addStage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }\n    }, \"Add Stage\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }\n    }, \"Rearrage tasks\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.fromdrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.todrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 1\n      }\n    }, op), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.rearrage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 1\n      }\n    }, \"Rearrage\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control form-control-lg\",\n      id: \"ip1\",\n      type: \"text\",\n      placeholder: \"Enter task \",\n      onChange: event => this.HandleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 138\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table table-striped table-responsive-md btn-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, stages)));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/mohitha/Desktop/assignment2/src/component/Board/Board.js"],"names":["React","Component","Board","state","tasklist","stage","drop","fromdrop","todrop","addStage","TaskData","JSON","parse","localStorage","getItem","props","username","array","boards","task","map","obj","Object","keys","index","findIndex","ele","splice","setItem","stringify","setState","rearrage","a1","item","ke","dropHadler","e","target","value","HandleChange","event","HandleStage","render","data","arr","optios","stages","push","console","log","op","addTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nclass Board extends Component{\n    \n    state={\n        tasklist:'',\n        stage:'',\n        drop:'',\n        fromdrop:'',\n        todrop:''\n    }\n    HandleChange(event)\n      {\n          this.setState({tasklist:event.target.value})\n      }\n      HandleStage(event)\n      {\n          this.setState({stage:event.target.value})\n      }\n    //  addTask=()=>\n    //     {\n    //         let task1=this.props.task\n    //          let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n    //         console.log(this.props.task)\n    //         console.log( TaskData.boards[task1][0].Todo)\n            \n    //         TaskData.boards[task1][0].Todo.push(this.state.tasklist)\n    //         TaskData.boards[task1][1].Done.push(this.state.tasklist)\n    //         console.log(TaskData)\n    //          localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n    //         // console.log(this.props.task)\n    //         // console.log(TaskData.boards[task1][0].todo)\n    //         this.setState({tasklist:''})\n    //     }\n        addStage=()=>\n        {\n            let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            \n            let array = TaskData.boards[this.props.task].map(obj => {\n            return Object.keys(obj)\n        })\n        let index = array.findIndex((ele) => {\n            return ele == this.state.drop\n        })\n        TaskData.boards[this.props.task].splice(index + 1, 0,{[this.state.stage]:[]} )\n            // console.log(TaskData.boards[this.props.task])\n            // let value=this.state.drop\n            // let arr= Object.keys( TaskData.boards[this.props.task])\n            // TaskData.boards[this.props.task].map(item=>{\n            //     console.log(value,item)\n            //     if(value===item)\n            //     {\n            //         let c=arr.indexOf(value)\n            //         TaskData.boards[this.props.task][c+1]={[this.state.stage]:[]}\n            //     }\n            // })\n            // console.log(TaskData)\n            //TaskData.boards[this.props.task].push({[this.state.stage]:[]})\n            localStorage.setItem(this.props.username,JSON.stringify( TaskData))\n\n            this.setState({stage:''})\n        }\n        rearrage=()=>{\n            let TaskData=JSON.parse(localStorage.getItem(this.props.username))\n            let a1=TaskData.boards[this.props.task].map(item=>{\n                return Object.ke\n            })\n        }\n\n        dropHadler=(e)=>{\n            this.setState({drop:e.target.value})\n        }\n        fromdrop=(e)=>{\n            this.setState({fromdrop:e.target.value})\n        }\n        todrop=(e)=>{\n            this.setState({todrop:e.target.value})\n        }\n    render(){\n       let data=JSON.parse(localStorage.getItem(this.props.username))\n       let value=this.state.drop\n       let arr=data.boards[this.props.task]\n       let optios=[]\n       let stages=arr.map(item=>{\n           optios.push(Object.keys(item))\n       return <th scope=\"col\">{Object.keys(item)}</th>\n       })\n       console.log()\n        let  op =optios.map(item=>{\n        return <option value={item}>{item}</option>\n    \n    })\n    //    let tasks=data.boards[this.props.task][0].Todo.map(item=>{\n    //        console.log(item)\n    \n    //         return <tr>\n    //         <td >{item}</td></tr>\n           \n          \n        \n    //     })\n    //     console.log(tasks)\n        return(\n            <div>\n<input  id=\"ip2\" type=\"text\" placeholder=\"Add stage\" value={this.state.stage} onChange={(event)=>this.HandleStage(event)}/>\n<select onChange={this.dropHadler}>\n    {op}\n</select>\n\n<button onClick={this.addStage}>Add Stage</button><br></br>\n<label>Rearrage tasks</label>\n<select onChange={this.fromdrop}>\n    {op}\n</select>\n<select onChange={this.todrop}>\n    {op}\n</select>\n<button onClick={this.rearrage}>Rearrage</button><br></br>\n<input class=\"form-control form-control-lg\" id=\"ip1\" type=\"text\" placeholder=\"Enter task \" onChange={(event)=>this.HandleChange(event)}/><br></br>\n<button onClick={this.addTask}>Add</button>\n                <table class=\"table table-striped table-responsive-md btn-table\">\n                    <thead>\n                        {stages}\n                    </thead>\n                 {/* <tbody>\n                        <tr>\n                            \n                                {tasks}\n                        </tr>\n                    </tbody>  */}\n                </table>\n                \n            </div>\n        )\n    }\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}